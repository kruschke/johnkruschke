
** KEY **

> Q550 Homework 6: Constraint Satisfaction Networks
> 
> For these exercises, use the Jets & Sharks files supplied with the
> "cs" program.
> 
> 1. Prototypes.  In this exercise we let the network tell us what it
> thinks a prototypical Jet is like.  We clamp the Jet node on, and then
> see what other feature values are stably activated.
> 
> A. Look at the list (Figure 1) on p.39 of PDP III, and determine the
> modal prototypical features for the Jets and for the Sharks.  That is,
> for each of the four features -- age, education, marital status, and
> occupation -- determine which value occurs most often for the Jets.

5 pts.

age:            20s  
education:      JH  
marital status: Sing.  
occupation:     any (all equally frequent)

> B. Edit the file "jets.net" so that v = -15.0 and h = -10.0. (What do
> you think "v" and "h" stand for?  I suspect it has something to do
> with whether or not the outside world can see those nodes.)  Then
> invoke the "cs" program using "jets.tem" and "jets.str".  Clamp the
> external input of the Jets node at 1.0, and set ncycle to 100.  Do the
> following fifteen times:
>      i. "newstart"
>     ii. "cycle"
>    iii. Count and record how many features -- age, education, marital
>         status, and occupation -- match the modal values of Jets.
> After fifteen runs, compute the mean number of feature matches across
> runs. 
> 
> Repeat that study using h = -1.0, and again using h = 0.0.

5 pts.

For one particular batch of 45 runs, I got the following outcomes:

                 h
      ------------------------
run     -10.0    -1.0     0.0
------------------------------
 1        3       3       3
 2        3       3       3
 3        3       4       4
 4        3       4       4
 5        3       4       3
 6        3       4       3
 7        2       4       4
 8        3       3       4
 9        3       3       4
10        2       4       4
11        2       4       4
12        3       4       4
13        3       4       4
14        2       4       3
15        3       4       4
------------------------------
mean:     2.73    3.73    3.67


> Describe how the completions generated by the network depend on the
> value of "h".  Which value of "h" is best for generating accurate
> prototypes?  How does the value of "h" affect the outcome of the
> network?

10 pts.

In this case, it turned out that h = -10.0 was the worst for
generating prototypes, and h = -1.0 was the best.  In general, though,
I believe that h = 0.0 will be best, and I just happened to get a poor
sample.

Just for kicks, here are t-tests of the differences (you were neither
asked nor required to do this):

  TWOSAMPLE T FOR neg-ten VS neg-one
            N      MEAN     STDEV   SE MEAN
  neg-ten  15     2.733     0.458     0.118
  neg-one  15     3.733     0.458     0.118
  POOLED STDEV =      0.458
  95 PCT CI FOR MU neg-ten - MU neg-one: ( -1.342,  -0.6575)
  TTEST MU neg-ten = MU neg-one (VS NE): T= -5.98  P=0.0000  DF=  28

  TWOSAMPLE T FOR neg-one VS zero
            N      MEAN     STDEV   SE MEAN
  neg-one  15     3.733     0.458     0.118
  zero     15     3.667     0.488     0.126
  POOLED STDEV =      0.473
  95 PCT CI FOR MU neg-one - MU zero: ( -0.2873,  0.4206)
  TTEST MU neg-one = MU zero (VS NE): T= 0.39  P=0.70  DF=  28

The value of h affects the outcome of the network by determining to
what extent individual instances will dominate the outcome.  With
h = -10, one instance will tend to dominate and suppress all others.
Generally, no one instance will have all the modal features of the
Jets, and so the numbers of matches will be relatively small.  With
h = 0, all instances will be activated, and so they will all contribute
to the visible feature nodes, so that the modal feature values will
tend to win.

> 2. Instances.  In this exercise we let the network retrieve missing
> features of a particular instance.  
> 
> A. Look at the list (Figure 1) on p.39 of PDP III, and determine the
> feature values of Ken.  Notice that Ken is the only instance with both
> "Sharks" and "in20s".

5 pts.

name:           Ken
education:      HS
marital status: Sing.
occupation:     Burglar

> B. Follow the procedure of 1B, but don't clamp on the Jets node,
> instead clamp on both the "Sharks" and "in20s" nodes. (You might have
> to specify them by node numbers, 1 and 2, instead of by node labels,
> because the label for "in20s" doesn't match "20s" on the screen.)  For
> each of the values of h = -10.0, -1.0, and 0.0, do the following
> fifteen times:
>      i. "newstart"
>     ii. "cycle"
>    iii. Count and record how many features -- name, education, marital
>         status, and occupation -- match the values of Ken.
> After fifteen runs, compute the mean number of feature matches across
> runs. 

5 pts.

For one particular batch of 45 runs, I got the following outcomes:

                 h
      ------------------------
run     -10.0    -1.0     0.0
------------------------------
 1        1       4       2
 2        4       3       2
 3        3       2       2
 4        4       4       4
 5        4       1       2
 6        4       2       3
 7        4       3       1
 8        4       2       1
 9        4       2       2
10        4       1       4
11        3       4       3
12        4       3       1
13        4       4       2
14        1       3       3
15        1       2       2
------------------------------
mean:     3.27    2.67    2.27

> Describe how the completions generated by the network depend on the
> value of "h".  Which value of "h" is best for generating accurate
> reconstructions of the Ken instance?  How does the value of "h" affect
> the outcome of the network?

10 pts.

In this case, the mean number of correct features recovered was best
for h = -10, next best for h = -1, and worst for h = 0.  

Just for kicks, here are an ANOVA and paired comparison (you were
neither asked nor required to do this):

  ANALYSIS OF VARIANCE
  SOURCE     DF        SS        MS        F        p
  FACTOR      2      7.60      3.80     3.24    0.049
  ERROR      42     49.20      1.17
  TOTAL      44     56.80
                                     INDIVIDUAL 95 PCT CI'S FOR MEAN
                                     BASED ON POOLED STDEV
   LEVEL      N      MEAN     STDEV  --+---------+---------+---------+----
  neg-ten    15     3.267     1.223                   (--------*---------)
  neg-one    15     2.667     1.047         (--------*---------)
  zero       15     2.267     0.961  (---------*--------)
                                     --+---------+---------+---------+----
  POOLED STDEV =    1.082            1.80      2.40      3.00      3.60


  TWOSAMPLE T FOR neg-ten VS zero
            N      MEAN     STDEV   SE MEAN
  neg-ten  15      3.27      1.22     0.316
  zero     15     2.267     0.961     0.248
  POOLED STDEV =       1.10
  95 PCT CI FOR MU neg-ten - MU zero: ( 0.1772,  1.823)
  TTEST MU neg-ten = MU zero (VS NE): T= 2.49  P=0.019  DF=  28

  T-tests of neg-ten vs neg-one, and neg-one vs zero, do not reach
  significance.  Increasing the sample size would probably yield
  reliable differences.

The value of h affects the outcome of the network by determining to
what extent individual instances will dominate the outcome.  With h =
-10, one instance will tend to dominate and suppress all others.  When
the _Ken is lucky enough to be updated in time not to be suppressed by
other instances that are Sharks or in20s, then _Ken will tend to
dominate and its feature values will usually appear on the visible
nodes.  With h = 0, all instances will be activated, and so they will
all contribute to the visible feature nodes, so that Ken's particular
features will get washed out.  The case of h = -1 is simply
intermediate, and shows intermediate effects.

> 3. Very briefly discuss whether or not the Jets and Sharks network can
> be used to retrieve instances and generate prototypes at the same
> time.

10 pts.

This particular network probably cannot generate good prototypes and
have good instance recollection at the same time, because the two
tasks are best accomplished using different values of h.  If there
were some external device that set the value of h depending on the
task, then this network could do both.

=== end ===


