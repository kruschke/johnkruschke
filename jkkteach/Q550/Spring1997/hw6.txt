Q550 Homework 6: Constraint Satisfaction Networks

Due **


Exercises from Anderson:

Ch.12:

Hopfield networks find local maxima of goodness (or local minima of
energy).  Simulated annealing is better at finding global maxima.  Do
we always want to find the global maximum?  (E.g., consider a case in
which the environmental pattern or stimulus is not "clamped" on but
merely flashed and then turned off.)

Consider the network described on pp.422+.  Using the Equation for
energy described in the book, show that the energy of state (a) in
Figure Figure 12.19, p.425, equals the energy in state (b).  (Hint:
You only need to consider the energy of five nodes.)  Show that the
energy of state (c) is greater than that of state (d). (Hint: Again,
you only need to consider five nodes.)

Ch.4:

Consider the equation on p.108 for determining the values of weights.
Are the weights between two nodes symmetric?

At the bottom of p.113, Anderson appeals to a theorem of Kreysig to
argue that the lateral inhibition network will stabilize.  Instead, if
we assume that the activation function of the nodes is a symmetric
sigmoid, can we apply Hopfield's stability theorem p.413-414?  Will
the lateral inhibition network stabilize?

Ch. 15:

Construct a graph similar to that in Figure 15.3 (p.505), as follows:

First, construct a weight matrix, A, from the eigenvectors and
eigenvalues shown in Figure 15.3, by using the equation in the middle
of the page on p.499.  Show that method really does generate the
"feedback matrix" in Fig.15.3.

Second, generate some trajectories of activations.  Specifically, use
the equation at the bottom of p.504, with gamma=0.9, alpha=0.5, and
delta=1.0.  Generate the first five steps when starting with
activation 0.55,0.25, and generate the first five steps when starting
with activation 0.4,0.4.  Which starting point would reach a stable
point sooner?


Related to Ch.16, but using the "cs" program:


For these exercises, use the Jets & Sharks files supplied with the
"cs" program.

1. Prototypes.  In this exercise we let the network tell us what it
thinks a prototypical Jet is like.  We clamp the Jet node on, and then
see what other feature values are stably activated.

A. Look at the list (Figure 1) on p.39 of PDP III, and determine the
modal prototypical features for the Jets and for the Sharks.  That is,
for each of the four features -- age, education, marital status, and
occupation -- determine which value occurs most often for the Jets.
(For some features, there is not a unique mode.  In that case, any of
the modal values counts as prototypical.)

B. Edit the file "jets.net" so that v = -15.0 and h = -10.0. (What do
you think "v" and "h" stand for?  I suspect it has something to do
with whether or not the outside world can see those nodes.)  Then
invoke the "cs" program using "jets.tem" and "jets.str".  Clamp the
external input of the Jets node at 1.0, and set ncycle to 100.  Do the
following fifteen times:
     i. "newstart" (not reset)
    ii. "cycle"
   iii. Count and record how many features -- age, education, marital
        status, and occupation -- match the modal values of Jets.
After fifteen runs, compute the mean number of feature matches across
runs. 

Repeat that experiment using h = -1.0, and again using h = 0.0.

Describe how the completions generated by the network depend on the
value of "h".  Which value of "h" is best for generating accurate
prototypes?  How does the value of "h" affect the outcome of the
network?

2. Instances.  In this exercise we let the network retrieve missing
features of a particular instance.  

A. Look at the list (Figure 1) on p.39 of PDP III, and determine the
feature values of Ken.  Notice that Ken is the only instance with both
"Sharks" and "in20s".

B. Follow the procedure of 1B, but don't clamp on the Jets node,
instead clamp on both the "Sharks" and "in20s" nodes. (You might have
to specify them by node numbers, 1 and 2, instead of by node labels,
because the label for "in20s" doesn't match "20s" on the screen.)  For
each of the values of h = -10.0, -1.0, and 0.0, do the following
fifteen times:
     i. "newstart"
    ii. "cycle"
   iii. Count and record how many features -- name, education, marital
        status, and occupation -- match the values of Ken.
After fifteen runs, compute the mean number of feature matches across
runs. 

Describe how the completions generated by the network depend on the
value of "h".  Which value of "h" is best for generating accurate
reconstructions of the Ken instance?  How does the value of "h" affect
the outcome of the network?

3. Very briefly discuss whether or not the Jets and Sharks network can
be used to retrieve instances and generate prototypes at the same
time.

++++++++++

=== end ===


